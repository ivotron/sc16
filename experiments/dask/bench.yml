# TODO
#  * add support for item.repetitions
#  * add support for item.run_in_tmps
- name: pull image
  shell: docker pull {{ item.image_name }}
- name: pull alpine
  shell: docker pull alpine

- name: run benchmark on localfs
  shell: >
    docker run --rm \
      -v {{ item.folder_name }}:/mount \
      {{ item.docker_flags }} \
      {{ item.image_name }} {{ item.image_args }}
  when: "{{ item.run_in_local_fs | bool }}"
  register: docker_output

- name: write results to output
  shell: echo "{{ item.id }}, exec, local, {{docker_output.delta}}" >> results.csv
  when: "{{ item.run_in_local_fs | bool }}"

# gassyfs

- name: copy folder into gassyfs
  shell: >
    docker run --rm \
      --volumes-from gassyfs-master \
      -v {{ item.folder_name }}:/data \
      alpine \
        sh -c "cp -r /data/* /mount "
  when:
  - "{{ item.run_in_gassyfs | bool }}"
  - "{{ item.copy_folder | bool }}"
  register: docker_output

- name: write results to output
  shell: echo "{{ item.id }}, copy, gassyfs, {{docker_output.delta}}" >> results.csv
  when:
  - "{{ item.run_in_gassyfs | bool }}"
  - "{{ item.copy_folder | bool }}"

- name: run benchmark on gassyfs
  shell: >
    docker run --rm \
      --volumes-from gassyfs-master \
      {{ item.docker_flags }} \
      {{ item.image_name }} {{ item.image_args }}
  register: docker_output
  when: "{{ item.run_in_gassyfs | bool }}"

- name: write results to output
  shell: echo "{{ item.id }}, exec, gassyfs, {{docker_output.delta}}" >> results.csv
  when: "{{ item.run_in_gassyfs | bool }}"

- name: delete files
  shell: >
    docker run --rm --volumes-from gassyfs-master alpine \
      sh -c "rm -r /mount/* "
  when:
  - "{{ item.delete_after | bool }}"
  - "{{ item.run_in_gassyfs | bool }}"

# tmpfs

- name: copy folder into tmpfs
  shell: >
    docker run --rm \
      --volumes-from tmpfs-master \
      -v {{ item.folder_name }}:/data \
      alpine \
        sh -c "cp -r /data/* /mount "
  when:
  - "{{ item.run_in_tmpfs | bool }}"
  - "{{ item.copy_folder | bool }}"
  register: docker_output

- name: write results to output
  shell: echo "{{ item.id }}, copy, tmpfs, {{docker_output.delta}}" >> results.csv
  when:
  - "{{ item.run_in_tmpfs | bool }}"
  - "{{ item.copy_folder | bool }}"

- name: run benchmark on tmpfs
  shell: >
    docker run --rm \
      --volumes-from tmpfs-master \
      {{ item.docker_flags }} \
      {{ item.image_name }} {{ item.image_args }}
  register: docker_output
  when: "{{ item.run_in_tmpfs | bool }}"

- name: write results to output
  shell: echo "{{ item.id }}, exec, tmpfs, {{docker_output.delta}}" >> results.csv
  when: "{{ item.run_in_tmpfs | bool }}"

- name: delete files
  shell: >
    docker run --rm --volumes-from tmpfs-master alpine \
      sh -c "rm -r /mount/* "
  when:
  - "{{ item.delete_after | bool }}"
  - "{{ item.run_in_tmpfs | bool }}"
